

<!DOCTYPE html>
<html >
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta content='width=1024' name='viewport'>
    <style>
    body {
      background: #333;
      color: #bbb;
    }

  #wrapper
   {

   }
    #cnv {
      zborder: 1px solid #303030;


      display: block;
    }

    </style>
      <!-- link href="css.css" rel="stylesheet" media="all" / -->

  </head>
  <body>
    <div id="wrapper">
      <canvas id="cnv" width="1001" height="541"></canvas>
    </div>
  
    <script>



var CUR = {x:0, y:0};
var DOT1 = {x:0, y:0};
var DOT2 = {x:0, y:0};
var DOT3 = {x:0, y:0};
var DOT4 = {x:0, y:0};
var DOT5 = {x:0, y:0};
var DOT6 = {x:0, y:0};
var ALFA = 1;

var T = 0;
var N = 0;

// количество столбцов изображений 
var cols = 3;
// количество строк изображений
var rows = 15;
// размер одного изображения
var size = 400;
var canvas = document.getElementById("cnv")
var context = canvas.getContext("2d");
var width = canvas.width = window.innerWidth;
var height = canvas.height = window.innerHeight * 20;



for (var x = 0.5; x < width; x += 10) {
  context.moveTo(x, 0);
  context.lineTo(x, height);
}

for (var y = 0.5; y < height; y += 10) {
  context.moveTo(0, y);
  context.lineTo(width, y);
}

context.strokeStyle = "#303030";
context.stroke();

context.beginPath();
context.strokeStyle = "#777";

setInterval('manyPoints()', 20);


DOT1.x = 0;
DOT1.y = 0;


function manyPoints() {
	for(var i = 0; i < 100; i+=10)
		onePoint();
}


function onePoint() {
  var n = -1;

  for(var j = 1; j < 100; j++ ) {
	  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
	  pset(
	  	center(n).x + size / 3 * ro * Math.cos(T * 100) * Math.cos(T * 110),
	  	center(n).y + size / 3 * ro * Math.sin(T * 100) * Math.sin(T * j*10),
	  	'#ddd'
	  )
	}

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 100) * Math.cos(T * 30),
  	center(n).y + size / 3 * ro * Math.sin(T * 100) * Math.sin(T * 60),
  	'#88f'
  )


  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 4 * 20) + 5 * Math.cos(T*100),
  	center(n).y + size / 3 * ro * Math.sin(T * 4 * 20) + 5 * Math.sin(T*100),
  	'#8f8'
  )

  for(var j = 1; j < 10; j++ ) {

	  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
	  pset(
	  	center(n).x + size / 3 * ro * Math.cos(T * j * 20),
	  	center(n).y + size / 3 * ro * Math.sin(T * j * 20),
	  	'#f88'
	  )
  }



  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 200),
  	center(n).y + size / 3 * ro * Math.sin(T * 20),
  	'#ff0'
  )


  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 20),
  	center(n).y + size / 3 * ro * Math.sin(T * 20),
  	'#ff0'
  )


  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 110),
  	center(n).y + size / 3 * ro * Math.sin(T * 90),
  	'#ff0'
  )

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 100),
  	center(n).y + size / 3 * ro * Math.sin(T * 100),
  	'#0f8'
  )

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 298),
  	center(n).y + size / 3 * ro * Math.sin(T * 100),
  	'#0f8'
  )

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 290),
  	center(n).y + size / 3 * ro * Math.sin(T * 100),
  	'#0f8'
  )


  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  pset(
  	center(n).x + size / 3 * ro * Math.cos(T * 299),
  	center(n).y + size / 3 * ro * Math.sin(T * 101),
  	'#0f8'
  )

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  DOT2.x = center(n).x + size / 3 * ro * Math.cos(T * 50);
  DOT2.y = center(n).y + size / 3 * ro * Math.sin(T * 50);
  pset(DOT2.x, DOT2.y, '#08f');

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  DOT3.x = center(n).x + size / 3 * ro * Math.cos(T * 60);
  DOT3.y = center(n).y + size / 3 * ro * Math.sin(T * 60);
  pset(DOT3.x, DOT3.y, '#0f8');

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  DOT4.x = center(n).x  + size / 3 * ro * Math.cos(T * 66.6);
  DOT4.y = center(n).y + size / 3 * ro * Math.sin(T * 66.6);
  pset(DOT4.x, DOT4.y, '#08f');

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 200)); n++;
  DOT5.x = center(n).x  + size / 3 * ro * Math.cos(T * 200);
  DOT5.y = center(n).y + size / 3 * ro * Math.sin(T * 800);
  pset(DOT5.x, DOT5.y, '#0f8');

  ro = ALFA * Math.sqrt(2 * Math.cos(2 * T * 100)); n++;
  DOT6.x = center(n).x + size / 3 * ro * Math.cos(T * 100);
  DOT6.y = center(n).y + size / 3 * ro * Math.sin(T * 100);
  pset(DOT6.x, DOT6.y, '#08f');

  T+=0.02; // время 
}


// возвращает координаты центра фигуры с номером n
function center(n) {
  var padding = 10;
  var sizep = size + padding * 2;
  var cols = parseInt( (width - padding * 2) / sizep);
  var rows = parseInt( (height - padding * 2) / sizep);
   
  var col = n % cols;
  var row = parseInt(n / cols);

  

  return {
  	x: padding + (size + padding * 2) * (col + 1 / 2),
  	y: padding + (size + padding * 2) * (row + 1 / 2)
  }
  //x = padding + sizep / 2 * ((width - padding * 2) % sizep)
  //y = padding + sizep / 2 * ((height - padding * 2) % sizep)
}


function line(x1, y1, x2, y2, color, context) {
  context.strokeStyle = color;
  context.beginPath();
  context.moveTo(x1, y1);
  context.lineTo(x2, y2);
  context.stroke();
}


function pset(x, y, color) {
  context.strokeStyle = color;
  context.beginPath();
  context.moveTo(x, y);
  context.lineTo(x, y+1);
  context.stroke();
}

    </script>

  </body>
</html>
