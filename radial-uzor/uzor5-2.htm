<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <style>
        body {
            background: #333;
            color: #bbb;
        }

        #wrapper {

        }

        #cnv {
            border: 0px solid #FF3030;
            width: 1001px;
            height: 1001px;
            margin: 10px auto;
            display: block;
        }

    </style>
    <!-- link href="css.css" rel="stylesheet" media="all" / -->
    <script src="./color-scheme.js"></script>

</head>
<body>
<div id="wrapper">

</div>


<script>


  var canvas = document.createElement('canvas');
  canvas.id = 'cnv';

  document.body.appendChild(canvas); // adds the canvas to the body element
  document.getElementById('wrapper').appendChild(canvas);

  var canvas = document.getElementById("cnv")
  var context = canvas.getContext("2d");

  canvas.width = 1001;
  canvas.height = 1001;

  var W = 1000;
  var H = 1000;

  var center = {
    x: W / 2,
    y: H / 2
  }


  var T = 0;

  // map
  for (var x = 0.5; x < 1001; x += 10) {
    context.moveTo(x, 0);
    context.lineTo(x, 540);
  }
  for (var y = 0.5; y < 541; y += 10) {
    context.moveTo(0, y);
    context.lineTo(1000, y);
  }

  context.strokeStyle = "#303030";
  context.stroke();

  context.beginPath();
  context.strokeStyle = "#777";


  // Pretty much the same exact syntax!
  var scheme = new ColorScheme;
  scheme.from_hue(21)
      .scheme('triade')
      .variation('soft');


  var colors = scheme.colors();


  setInterval('circle()', 100);

  function circle() {

    var A = {
      x: rnd(10),
      y: rnd(10)
    };

    var S = [360 / 6, 360 / 12, 360 / 24][rnd(3)];

    var R1 = rnd(450);
    var R2 = rnd(450);

    var lw;

    var color;
    var hexcolor;
    if (rnd(10) > 8) {
      color = {
        r: rnd(255),
        g: rnd(255),
        b: rnd(255),
      }
      //color = '#' + colors[rnd(12)];
      color = "rgba(" + color.r + "," + color.g + "," + color.b + ",0.5)"
      lw = rnd(4) + 1;
    }
    else {
      color = {
        r: 0,
        g: 0,
        b: 0,
      }
      color = "rgba(" + color.r + "," + color.g + "," + color.b + ",0.1)"
      lw = rnd(10) + 1;
    }


    //context.lineDashOffset = 3;

    for (var i = 0; i < 360; i += S) {

      var g1 = Math.PI * i / 180;
      var g2 = Math.PI * (i + S / 2) / 180;
      var g3 = Math.PI * (i - S / 2) / 180;

      var x1 = center.x + R1 * Math.sin(g1);//+A.x);
      var y1 = center.y + R1 * Math.cos(g1);//+A.y);
      var x2 = center.x + R2 * Math.sin(g2);
      var y2 = center.y + R2 * Math.cos(g2);
      var x3 = center.x + R2 * Math.sin(g3);
      var y3 = center.y + R2 * Math.cos(g3);

      //var x1d = x1*Math.cos(Math.PI/4) - y1*Math.sin(Math.PI/4);
      //var y1d = x1*Math.sin(Math.PI/4) + y1*Math.cos(Math.PI/4);

      line(x1, y1, x2, y2, color, lw, context);
      line(x1, y1, x3, y3, color, lw, context);
    }
  }

  function rnd(v) {
    return Math.floor(Math.random() * v)
  }

  function line(x1, y1, x2, y2, color, lw, context) {
    context.strokeStyle = color;
    context.lineWidth = lw;
    context.beginPath();
    context.moveTo(x1, y1);
    context.lineTo(x2, y2);
    context.stroke();
  }


  function pset(x, y, context, color) {
    context.strokeStyle = color;
    context.beginPath();
    context.moveTo(x, y);
    context.lineTo(x, y + 1);
    context.stroke();
  }

</script>

</body>
</html>
